# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

jobs:

- job: 'Test'
  pool:
    vmImage: 'Ubuntu-16.04'
  strategy:
    matrix:
      Python36:
        python.version: '3.6'
        ONNX_PATH: onnx==1.4.1
      Python37:
        python.version: '3.7'
        ONNX_PATH: onnx==1.5.0
    maxParallel: 3

  steps:
  - script: sudo install -d -m 0777 /home/vsts/.conda/envs
    displayName: Fix Conda permissions

  - task: CondaEnvironment@1
    inputs:
      createCustomEnvironment: true
      environmentName: 'py$(python.version)'
      packageSpecs: 'python=$(python.version)'

  - script: |
      python -m pip install --upgrade pip
      conda config --set always_yes yes --set changeps1 no
      conda install -c conda-forge protobuf
      conda install -c conda-forge numpy pandas
      pip install -r requirements.txt
      pip install $(ONNX_PATH)
      pip install pytest
      pip install scikit-learn
    displayName: 'Install dependencies'

  - script: |
      pip install pandas
      pip install skl2onnx --no-deps
      pip install onnxruntime --no-deps
    displayName: 'Install skl2onnx'
    condition: ne(variables['python.version'], '2.7')

  - script: |
      pip install -e .
    displayName: 'Install this'

  - script: |
      python -c "import onnxconverter_common"
      pytest tests --doctest-modules --junitxml=junit/test-results-onnxutils.xml
    displayName: 'pytest - onnxutils'

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-results.xml'
      testRunTitle: 'Python $(python.version)'
    condition: succeededOrFailed()
